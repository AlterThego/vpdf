{"version":3,"file":"BJmGdMqi.js","sources":["../src/components/vPdfPageRenderer.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  defineAsyncComponent,\r\n  nextTick,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  ref,\r\n  shallowRef,\r\n  watch,\r\n} from \"vue\";\r\nimport {\r\n  type PDFDocumentLoadingTask,\r\n  type PDFDocumentProxy,\r\n  type PDFPageProxy,\r\n  type PageViewport,\r\n} from \"pdfjs-dist\";\r\nimport type { pdfPageInfo, RenderParameters } from \"../types/pdf\";\r\n\r\nconst TextLayer = defineAsyncComponent(() => import(\"./layers/textLayer.vue\"));\r\n\r\ntype RenderArgs = {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  viewport: PageViewport;\r\n  doc: PDFDocumentProxy;\r\n};\r\n\r\ninterface IProps {\r\n  pageInfo: pdfPageInfo;\r\n  pdf: PDFDocumentLoadingTask;\r\n  textLayer: boolean;\r\n  render: boolean;\r\n  onRender?: (opts: RenderArgs) => void;\r\n  onError?: Function;\r\n}\r\nconst props = withDefaults(defineProps<IProps>(), {\r\n  textLayer: false,\r\n  render: false,\r\n  onRender: () => {},\r\n});\r\n\r\nconst rendering = ref(false);\r\nconst canva = ref<HTMLCanvasElement>();\r\nconst renderer = shallowRef();\r\nconst renderedPage = shallowRef<PDFPageProxy>();\r\n\r\nconst ctx = computed(() =>\r\n  canva.value?.getContext(\"2d\", {\r\n    alpha: false,\r\n    willReadFrequently: true,\r\n  })\r\n);\r\n\r\nconst renderPage = async () => {\r\n  if (!rendering.value && !!canva.value && !!ctx.value) {\r\n    rendering.value = true;\r\n    const { viewport, page } = props.pageInfo;\r\n    const { promise } = props.pdf;\r\n    const doc = await promise;\r\n\r\n    try {\r\n      renderedPage.value = await doc.getPage(page);\r\n      const renderContext: RenderParameters = {\r\n        canvasContext: ctx.value,\r\n        viewport,\r\n      };\r\n\r\n      renderer.value = renderedPage.value.render(renderContext);\r\n      await renderer.value.promise;\r\n      if (!!canva.value && !!ctx.value) {\r\n        props.onRender({\r\n          canvas: canva.value,\r\n          context: ctx.value,\r\n          viewport,\r\n          doc,\r\n        });\r\n      }\r\n    } catch (e: any) {\r\n      props.onError?.(e);\r\n      if (e.name != \"RenderingCancelledException\") {\r\n      }\r\n    } finally {\r\n      rendering.value = false;\r\n      renderedPage.value?.cleanup(true);\r\n    }\r\n  }\r\n};\r\n\r\nwatch(\r\n  () => props.render,\r\n  async (val) => {\r\n    if (val && !renderedPage.value) {\r\n      await renderPage();\r\n    }\r\n  }\r\n);\r\n\r\nonMounted(async () => {\r\n  if (props.render) {\r\n    await renderPage();\r\n  }\r\n});\r\n\r\nonBeforeUnmount(async () => {\r\n  if (rendering.value) {\r\n    renderer.value.cancel();\r\n  }\r\n  renderedPage.value?.cleanup();\r\n});\r\n\r\ndefineExpose({\r\n  context: ctx,\r\n  canvas: canva,\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div class=\"leading-none\">\r\n    <div class=\"relative h-full w-full bg-white leading-none\">\r\n      <slot name=\"prepend\" />\r\n      <canvas\r\n        ref=\"canva\"\r\n        class=\"box-border h-full w-full border border-gray-400 bg-white outline-none\"\r\n        :class=\"{\r\n          hidden: rendering,\r\n        }\"\r\n        :width=\"pageInfo.viewport.width\"\r\n        :height=\"pageInfo.viewport.height\"\r\n      />\r\n      <TextLayer\r\n        v-if=\"textLayer && renderedPage\"\r\n        :page=\"renderedPage!\"\r\n        :pageInfo=\"pageInfo\"\r\n      />\r\n      <Transition\r\n        enter-from-class=\"opacity-0 blur-sm\"\r\n        leave-to-class=\"opacity-0 blur-sm\"\r\n        enter-active-class=\"transition\"\r\n        leave-active-class=\"transition\"\r\n      >\r\n        <div\r\n          v-if=\"rendering\"\r\n          class=\"absolute inset-0 flex items-center bg-black/5\"\r\n        >\r\n          <div class=\"mx-auto\">\r\n            <span\r\n              class=\"realtive block h-[1em] w-[1em] animate-mltShdSpin overflow-hidden rounded-full -indent-[9999em] text-sm leading-none text-black\"\r\n              style=\"transform: translateZ(0)\"\r\n            ></span>\r\n          </div>\r\n        </div>\r\n      </Transition>\r\n      <slot name=\"append\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"names":["TextLayer","defineAsyncComponent","props","__props","rendering","ref","canva","renderer","shallowRef","renderedPage","ctx","computed","_a","renderPage","viewport","page","promise","doc","renderContext","e","_b","watch","val","onMounted","onBeforeUnmount","__expose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAmBA,UAAMA,IAAYC,EAAqB,MAAM,OAAO,eAAwB,CAAC,GAiBvEC,IAAQC,GAMRC,IAAYC,EAAI,EAAK,GACrBC,IAAQD,EAAuB,GAC/BE,IAAWC,EAAW,GACtBC,IAAeD,EAAyB,GAExCE,IAAMC;AAAA,MAAS,MAAA;;AACnB,gBAAAC,IAAAN,EAAM,UAAN,gBAAAM,EAAa,WAAW,MAAM;AAAA,UAC5B,OAAO;AAAA,UACP,oBAAoB;AAAA,QACrB;AAAA;AAAA,IACH,GAEMC,IAAa,YAAY;;AACzB,UAAA,CAACT,EAAU,SAAWE,EAAM,SAAWI,EAAI,OAAO;AACpD,QAAAN,EAAU,QAAQ;AAClB,cAAM,EAAE,UAAAU,GAAU,MAAAC,EAAK,IAAIb,EAAM,UAC3B,EAAE,SAAAc,MAAYd,EAAM,KACpBe,IAAM,MAAMD;AAEd,YAAA;AACF,UAAAP,EAAa,QAAQ,MAAMQ,EAAI,QAAQF,CAAI;AAC3C,gBAAMG,IAAkC;AAAA,YACtC,eAAeR,EAAI;AAAA,YACnB,UAAAI;AAAA,UACF;AAEA,UAAAP,EAAS,QAAQE,EAAa,MAAM,OAAOS,CAAa,GACxD,MAAMX,EAAS,MAAM,SACfD,EAAM,SAAWI,EAAI,SACzBR,EAAM,SAAS;AAAA,YACb,QAAQI,EAAM;AAAA,YACd,SAASI,EAAI;AAAA,YACb,UAAAI;AAAA,YACA,KAAAG;AAAA,UAAA,CACD;AAAA,iBAEIE,GAAQ;AACf,WAAAP,IAAAV,EAAM,YAAN,QAAAU,EAAA,KAAAV,GAAgBiB,IACZA,EAAE,QAAQ;AAAA,QACd,UACA;AACA,UAAAf,EAAU,QAAQ,KACLgB,IAAAX,EAAA,UAAA,QAAAW,EAAO,QAAQ;AAAA,QAAI;AAAA,MAClC;AAAA,IAEJ;AAEA,WAAAC;AAAA,MACE,MAAMnB,EAAM;AAAA,MACZ,OAAOoB,MAAQ;AACT,QAAAA,KAAO,CAACb,EAAa,SACvB,MAAMI,EAAW;AAAA,MACnB;AAAA,IAEJ,GAEAU,EAAU,YAAY;AACpB,MAAIrB,EAAM,UACR,MAAMW,EAAW;AAAA,IACnB,CACD,GAEDW,EAAgB,YAAY;;AAC1B,MAAIpB,EAAU,SACZG,EAAS,MAAM,OAAO,IAExBK,IAAAH,EAAa,UAAb,QAAAG,EAAoB;AAAA,IAAQ,CAC7B,GAEYa,EAAA;AAAA,MACX,SAASf;AAAA,MACT,QAAQJ;AAAA,IAAA,CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}