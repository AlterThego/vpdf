{"version":3,"file":"ClWvyr-2.js","sources":["../src/components/vPdfViewer.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport type { PDFDocumentLoadingTask } from \"pdfjs-dist\";\r\nimport { PropType, computed, defineAsyncComponent, ref, watch } from \"vue\";\r\nimport { usePdfViewer } from \"../composables/usePdfViewer\";\r\n\r\nconst VPdfPageRenderer = defineAsyncComponent(\r\n  () => import(\"./vPdfPageRenderer.vue\")\r\n);\r\n\r\nconst props = defineProps({\r\n  pdf: {\r\n    type: Object as PropType<PDFDocumentLoadingTask>,\r\n    required: true,\r\n  },\r\n  scale: {\r\n    type: Number,\r\n    default: 1.0,\r\n  },\r\n  gap: {\r\n    type: Number,\r\n    default: 10,\r\n  },\r\n  rotation: {\r\n    type: Number,\r\n    default: 0,\r\n    validator: (val: number) => {\r\n      const result = val % 90 == 0;\r\n      if (!result) {\r\n        throw new Error(\"Rotation must be a multiple of 90\");\r\n      }\r\n      return result;\r\n    },\r\n  },\r\n  view: {\r\n    type: String as PropType<\"vertical\" | \"horizontal\">,\r\n    default: \"vertical\",\r\n  },\r\n  page: {\r\n    type: Number,\r\n    default: 1,\r\n  },\r\n  textLayer: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  smoothJump: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  renderDelay: {\r\n    type: Number,\r\n    default: 50,\r\n  },\r\n\r\n  renderOffset: {\r\n    type: Number,\r\n    default: 256,\r\n  },\r\n\r\n  onProgress: {\r\n    type: Function,\r\n    default: () => {},\r\n  },\r\n});\r\n\r\nconst emit = defineEmits([\"update:page\", \"update:scale\", \"progress\"]);\r\n\r\nconst container = ref<HTMLElement>();\r\n\r\nconst slotBinds = computed(() => ({\r\n  numPages: totalPage,\r\n  progress: progress,\r\n  pages: pageInfo,\r\n  container: containerBounds,\r\n  currentPage: currentPage,\r\n  visiblePages: visiblePages,\r\n  render: render,\r\n  viewMode: viewMode,\r\n  changePage,\r\n  nextPage,\r\n  prevPage,\r\n  fitWidth,\r\n  fitHeight,\r\n  fitPage,\r\n}));\r\n\r\nconst {\r\n  totalPage,\r\n  pageInfo,\r\n  containerBounds,\r\n  progress,\r\n  render,\r\n  currentPage,\r\n  visiblePages,\r\n  scale,\r\n  viewMode,\r\n  nextPage,\r\n  prevPage,\r\n  changePage,\r\n  fitWidth,\r\n  fitHeight,\r\n  fitPage,\r\n  // ------------ Unused properties / methods ------------\r\n  // scrollState,\r\n  // rotation,\r\n  // readPDF,\r\n  // getPageInfo,\r\n  // getBounds,\r\n  // getVBounds,\r\n  // getHBounds,\r\n  // getInnerBounds,\r\n  // getGaps,\r\n  // getVisiblePages,\r\n  // boundsIntersecting,\r\n  // onContainerScroll,\r\n  // inRange,\r\n  // getCurrentPage,\r\n  // getFitRatio,\r\n} = usePdfViewer(container, props);\r\n\r\nwatch(progress, (val) => {\r\n  props.onProgress(val);\r\n  emit(\"progress\", val);\r\n});\r\n\r\nwatch(currentPage, (val) => {\r\n  emit(\"update:page\", val);\r\n});\r\n\r\nwatch(scale, (val) => {\r\n  emit(\"update:scale\", val);\r\n});\r\n\r\ndefineExpose(slotBinds.value);\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    ref=\"container\"\r\n    class=\"relative grid h-full min-h-0 w-full min-w-0 items-center overflow-scroll bg-foreground/15\"\r\n    :class=\"{\r\n      'grid items-center': viewMode != 'vertical',\r\n    }\"\r\n  >\r\n    <slot v-bind=\"slotBinds\" name=\"prepend\" />\r\n    <div\r\n      v-if=\"!!pdf\"\r\n      class=\"relative mx-auto\"\r\n      :style=\"{\r\n        width: `${containerBounds.width}px`,\r\n        height: `${containerBounds.height}px`,\r\n      }\"\r\n    >\r\n      <slot v-bind=\"slotBinds\">\r\n        <template v-for=\"vp in visiblePages\" :key=\"vp.id\">\r\n          <slot name=\"renderer\" :pdf=\"pdf\" :pageInfo=\"vp\" :render=\"render\">\r\n            <VPdfPageRenderer\r\n              :pdf=\"pdf\"\r\n              :pageInfo=\"vp\"\r\n              class=\"absolute\"\r\n              :textLayer=\"textLayer\"\r\n              :render=\"render\"\r\n              :style=\"{\r\n                top: `${vp.bounds.inner.top}px`,\r\n                left: `${vp.bounds.inner.left}px`,\r\n                width: `${vp.viewport.width}px`,\r\n                height: `${vp.viewport.height}px`,\r\n              }\"\r\n            />\r\n          </slot>\r\n        </template>\r\n      </slot>\r\n    </div>\r\n    <slot v-bind=\"slotBinds\" name=\"append\" />\r\n  </div>\r\n</template>\r\n"],"names":["VPdfPageRenderer","defineAsyncComponent","props","__props","emit","__emit","container","ref","slotBinds","computed","totalPage","progress","pageInfo","containerBounds","currentPage","visiblePages","render","viewMode","changePage","nextPage","prevPage","fitWidth","fitHeight","fitPage","scale","usePdfViewer","watch","val","__expose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,IAAmBC;AAAA,MACvB,MAAM,OAAO,eAAwB;AAAA,IACvC,GAEMC,IAAQC,GAwDRC,IAAOC,GAEPC,IAAYC,EAAiB,GAE7BC,IAAYC,EAAS,OAAO;AAAA,MAChC,UAAUC;AAAA,MACV,UAAAC;AAAA,MACA,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,aAAAC;AAAA,MACA,cAAAC;AAAA,MACA,QAAAC;AAAA,MACA,UAAAC;AAAA,MACA,YAAAC;AAAA,MACA,UAAAC;AAAA,MACA,UAAAC;AAAA,MACA,UAAAC;AAAA,MACA,WAAAC;AAAA,MACA,SAAAC;AAAA,IAAA,EACA,GAEI;AAAA,MACJ,WAAAb;AAAA,MACA,UAAAE;AAAA,MACA,iBAAAC;AAAA,MACA,UAAAF;AAAA,MACA,QAAAK;AAAA,MACA,aAAAF;AAAA,MACA,cAAAC;AAAA,MACA,OAAAS;AAAA,MACA,UAAAP;AAAA,MACA,UAAAE;AAAA,MACA,UAAAC;AAAA,MACA,YAAAF;AAAA,MACA,UAAAG;AAAA,MACA,WAAAC;AAAA,MACA,SAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA,IAiBEE,EAAanB,GAAWJ,CAAK;AAE3B,WAAAwB,EAAAf,GAAU,CAACgB,MAAQ;AACvB,MAAAzB,EAAM,WAAWyB,CAAG,GACpBvB,EAAK,YAAYuB,CAAG;AAAA,IAAA,CACrB,GAEKD,EAAAZ,GAAa,CAACa,MAAQ;AAC1B,MAAAvB,EAAK,eAAeuB,CAAG;AAAA,IAAA,CACxB,GAEKD,EAAAF,GAAO,CAACG,MAAQ;AACpB,MAAAvB,EAAK,gBAAgBuB,CAAG;AAAA,IAAA,CACzB,GAEDC,EAAapB,EAAU,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}