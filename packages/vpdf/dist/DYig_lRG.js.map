{"version":3,"file":"DYig_lRG.js","sources":["../../../node_modules/mime-db/index.js","../../../node_modules/@whykhamist/mime-types/dist/index.js","../src/components/sidebar/attachments/index.vue"],"sourcesContent":["/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","var u = Object.defineProperty;\nvar T = (r, e, t) => e in r ? u(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;\nvar n = (r, e, t) => T(r, typeof e != \"symbol\" ? e + \"\" : e, t);\nimport l from \"mime-db\";\nimport { default as A } from \"mime-db\";\nclass m {\n  constructor(e, t) {\n    n(this, \"db\");\n    n(this, \"EXTRACT_TYPE_REGEXP\");\n    n(this, \"TEXT_TYPE_REGEXP\");\n    n(this, \"EXTRACT_EXT_REGEXP\");\n    n(this, \"types\");\n    n(this, \"extensions\");\n    n(this, \"typeSets\");\n    /**\n     * Extract extension from file path/name\n     * @private\n     * @param {string} path path to file\n     * @returns {string} string  extension or empty string if not found\n     */\n    n(this, \"extname\", (e) => {\n      const t = this.EXTRACT_EXT_REGEXP.exec(e);\n      return t == null ? \"\" : `.${t[1]}`;\n    });\n    /**\n     * Obtain the extension of a filename or filepath.\n     * If the path is not a string or a proper extension isn't found, false is returned.\n     * The path is case insensitive (so hello.html and HELLO.HTML are equal).\n     * @private\n     * @param {string} path\n     * @return {boolean|string} the file extension if available. false otherwise.\n     */\n    n(this, \"extractExtension\", (e) => {\n      if (!e || typeof e != \"string\")\n        return !1;\n      const t = this.extname(\"x.\" + e).toLowerCase().substring(1);\n      return t || !1;\n    });\n    /**\n     * Populate the extensions and types maps.\n     * @private\n     */\n    n(this, \"populateMaps\", () => {\n      const e = [\"nginx\", \"apache\", void 0, \"iana\"], t = this.db, s = this.types, f = this.typeSets;\n      Object.keys(t).forEach((a) => {\n        const E = t[a], i = E.extensions;\n        if (!(!i || !i.length)) {\n          Object.assign(this.extensions, { [a]: i });\n          for (let o = 0; o < i.length; o++) {\n            const c = i[o];\n            if (f[i[o]] ? f[i[o]].push(a) : f[i[o]] = [a], s[c]) {\n              const h = e.indexOf(t[s[c]].source), x = e.indexOf(E.source);\n              if (s[c] !== \"application/octet-stream\" && (h > x || h === x && s[c].substr(0, 12) === \"application/\"))\n                continue;\n            }\n            s[c] = a;\n          }\n        }\n      });\n    });\n    /**\n     * Get the default charset for a MIME type.\n     *\n     * @param {string} type\n     * @return {boolean|string}\n     */\n    n(this, \"getCharset\", (e) => {\n      if (!e || typeof e != \"string\")\n        return !1;\n      const t = this.EXTRACT_TYPE_REGEXP.exec(e), s = t && this.db[t[1].toLowerCase()];\n      return s && s.charset ? s.charset : t && this.TEXT_TYPE_REGEXP.test(t[1]) ? \"UTF-8\" : !1;\n    });\n    /**\n     * Create a full Content-Type header given a MIME type or extension.\n     *\n     * @param {string} str - MIME type or file extension\n     * @return {boolean|string}\n     */\n    n(this, \"getContentType\", (e) => {\n      if (!e || typeof e != \"string\")\n        return !1;\n      let t = e.indexOf(\"/\") === -1 ? this.getMime(e) : e;\n      if (!t)\n        return !1;\n      if (t.indexOf(\"charset\") === -1) {\n        const s = this.getCharset(t);\n        s && (t += \"; charset=\" + s.toLowerCase());\n      }\n      return t;\n    });\n    /**\n     * Get the default extension for a MIME type.\n     *\n     * @param {string} type\n     * @return {boolean|string}\n     */\n    n(this, \"getExtension\", (e) => {\n      if (!e || typeof e != \"string\")\n        return !1;\n      const t = this.EXTRACT_TYPE_REGEXP.exec(e), s = t && this.extensions[t[1].toLowerCase()];\n      return !s || !s.length ? !1 : s[0];\n    });\n    /**\n     * Lookup the MIME type for a file path/extension.\n     *\n     * @param {string} path\n     * @return {boolean|string}\n     */\n    n(this, \"getMime\", (e) => {\n      if (!e || typeof e != \"string\")\n        return !1;\n      const t = this.extname(\"x.\" + e).toLowerCase().substring(1);\n      return t && this.types[t] || !1;\n    });\n    /**\n     * Find all MIME types that are associated with a file extensions.\n     *\n     * @param {string} path or file extension\n     * @return {boolean|array<string>}\n     */\n    n(this, \"getMimes\", (e) => {\n      const t = this.extractExtension(e);\n      return t && this.typeSets[t] || !1;\n    });\n    this.db = e, t && this.setExtNameFn(t), this.EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/, this.TEXT_TYPE_REGEXP = /^text\\//i, this.EXTRACT_EXT_REGEXP = /^.+\\.([^.]+)$/, this.types = /* @__PURE__ */ Object.create(null), this.extensions = /* @__PURE__ */ Object.create(null), this.typeSets = /* @__PURE__ */ Object.create(null), this.populateMaps();\n  }\n  /**\n   * Set extname function for extracting extension from file path/name\n   * @private\n   * @param {Function} extname\n   */\n  setExtNameFn(e) {\n    this.extname = e;\n  }\n}\nconst p = new m(l), {\n  types: _,\n  extensions: C,\n  typeSets: P,\n  getCharset: R,\n  getContentType: b,\n  getExtension: y,\n  getMime: d,\n  getMimes: G\n} = p;\nexport {\n  A as MimeDb,\n  m as MimeTypes,\n  p as default,\n  C as extensions,\n  R as getCharset,\n  b as getContentType,\n  y as getExtension,\n  d as getMime,\n  G as getMimes,\n  P as typeSets,\n  _ as types\n};\n","<script setup lang=\"ts\">\r\nimport { defineAsyncComponent, ref } from \"vue\";\r\nimport { pdfattachment, pdfattachmentFile } from \"../../../types/pdf\";\r\nimport { getMime } from \"@whykhamist/mime-types\";\r\n\r\nconst AttachmentItem = defineAsyncComponent(\r\n  () => import(\"./attachmentItem.vue\")\r\n);\r\n\r\nconst props = defineProps<{\r\n  attachments?: pdfattachment | null;\r\n}>();\r\n\r\n// TODO: Create multiple file selection & download feature\r\n\r\nconst downloadFile = (filename: string) => {\r\n  const blob = binaryToBlob(\r\n    props.attachments![filename].content as Uint8Array,\r\n    getMime(filename) as string\r\n  );\r\n  download(blob, filename);\r\n};\r\n\r\nconst download = (blob: Blob, fileName: string) => {\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = fileName;\r\n  a.click();\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\nconst binaryToBlob = (data: Uint8Array, type: string) => {\r\n  const blob = new Blob([data], {\r\n    type: type,\r\n  });\r\n  return blob;\r\n};\r\n\r\nconst humanFileSize = (bytes: number, si = false, dp = 1) => {\r\n  const thresh = si ? 1000 : 1024;\r\n\r\n  if (Math.abs(bytes) < thresh) {\r\n    return bytes + \" B\";\r\n  }\r\n\r\n  const units = si\r\n    ? [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n    : [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"];\r\n  let u = -1;\r\n  const r = 10 ** dp;\r\n\r\n  do {\r\n    bytes /= thresh;\r\n    ++u;\r\n  } while (\r\n    Math.round(Math.abs(bytes) * r) / r >= thresh &&\r\n    u < units.length - 1\r\n  );\r\n\r\n  return bytes.toFixed(dp) + \" \" + units[u];\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex max-h-full flex-col gap-0.5 py-1\">\r\n    <div class=\"min-h-0 flex-auto overflow-auto\">\r\n      <template v-if=\"!attachments || Object.keys(attachments).length <= 0\">\r\n        <div\r\n          class=\"select-none text-center font-semibold italic text-gray-400/50\"\r\n        >\r\n          No Attachments\r\n        </div>\r\n      </template>\r\n      <template\r\n        v-for=\"(attachment, index) in attachments\"\r\n        :key=\"attachment.filename\"\r\n      >\r\n        <AttachmentItem\r\n          :attachment=\"attachment\"\r\n          :size=\"humanFileSize(attachment.content.length)\"\r\n          @click=\"downloadFile(index)\"\r\n          class=\"mb-0.5\"\r\n        />\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"names":["mimeDb","require$$0","u","T","r","e","t","n","m","f","a","E","i","c","h","p","l","_","C","P","R","b","y","d","G","AttachmentItem","defineAsyncComponent","props","__props","downloadFile","filename","blob","binaryToBlob","getMime","download","fileName","url","data","type","humanFileSize","bytes","si","dp","thresh","units"],"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","x_google_ignoreList":[0,1]}